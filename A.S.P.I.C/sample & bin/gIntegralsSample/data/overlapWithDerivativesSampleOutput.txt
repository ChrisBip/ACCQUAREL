> AspicOverlap := 1;
> nbrOfContractions_Phi1 := 3:
> Coefficients_Phi1 := [0.2149354488921539 , 0.3645712021918747 , 0.4150514278828989];
> Exponents_Phi1 := [18.73113696 , 2.825394365 , 0.6401216923];
>Center_x_Phi1 := 0;
>Center_y_Phi1 := 0;
>Center_z_Phi1 := 0;
>Degree_x_Phi1 := 0;
>Degree_y_Phi1 := 0;
>Degree_z_Phi1 := 0;
> basisFunction_Phi1 [1] := proc (x,y,z)
> Coefficients_Phi1[1] * 
> (x - Center_x_Phi1)^Degree_x_Phi1*
> (y - Center_y_Phi1)^Degree_y_Phi1*
> (z - Center_z_Phi1)^Degree_z_Phi1*
> exp( - Exponents_Phi1[1] * (
> (x - Center_x_Phi1)^2 +
> (y - Center_y_Phi1)^2 +
> (z - Center_z_Phi1)^2
>));
> end:
> basisFunction_Phi1[1](x,y,z);
> basisFunction_Phi1 [2] := proc (x,y,z)
> Coefficients_Phi1[2] * 
> (x - Center_x_Phi1)^Degree_x_Phi1*
> (y - Center_y_Phi1)^Degree_y_Phi1*
> (z - Center_z_Phi1)^Degree_z_Phi1*
> exp( - Exponents_Phi1[2] * (
> (x - Center_x_Phi1)^2 +
> (y - Center_y_Phi1)^2 +
> (z - Center_z_Phi1)^2
>));
> end:
> basisFunction_Phi1[2](x,y,z);
> basisFunction_Phi1 [3] := proc (x,y,z)
> Coefficients_Phi1[3] * 
> (x - Center_x_Phi1)^Degree_x_Phi1*
> (y - Center_y_Phi1)^Degree_y_Phi1*
> (z - Center_z_Phi1)^Degree_z_Phi1*
> exp( - Exponents_Phi1[3] * (
> (x - Center_x_Phi1)^2 +
> (y - Center_y_Phi1)^2 +
> (z - Center_z_Phi1)^2
>));
> end:
> basisFunction_Phi1[3](x,y,z);
> nbrOfContractions_Phi2 := 3:
> Coefficients_Phi2 := [0.2149354488921539 , 0.3645712021918747 , 0.4150514278828989];
> Exponents_Phi2 := [18.73113696 , 2.825394365 , 0.6401216923];
>Center_x_Phi2 := 0;
>Center_y_Phi2 := 0;
>Center_z_Phi2 := 0;
>Degree_x_Phi2 := 0;
>Degree_y_Phi2 := 0;
>Degree_z_Phi2 := 0;
> basisFunction_Phi2 [1] := proc (x,y,z)
> Coefficients_Phi2[1] * 
> (x - Center_x_Phi2)^Degree_x_Phi2*
> (y - Center_y_Phi2)^Degree_y_Phi2*
> (z - Center_z_Phi2)^Degree_z_Phi2*
> exp( - Exponents_Phi2[1] * (
> (x - Center_x_Phi2)^2 +
> (y - Center_y_Phi2)^2 +
> (z - Center_z_Phi2)^2
>));
> end:
> basisFunction_Phi2[1](x,y,z);
> basisFunction_Phi2 [2] := proc (x,y,z)
> Coefficients_Phi2[2] * 
> (x - Center_x_Phi2)^Degree_x_Phi2*
> (y - Center_y_Phi2)^Degree_y_Phi2*
> (z - Center_z_Phi2)^Degree_z_Phi2*
> exp( - Exponents_Phi2[2] * (
> (x - Center_x_Phi2)^2 +
> (y - Center_y_Phi2)^2 +
> (z - Center_z_Phi2)^2
>));
> end:
> basisFunction_Phi2[2](x,y,z);
> basisFunction_Phi2 [3] := proc (x,y,z)
> Coefficients_Phi2[3] * 
> (x - Center_x_Phi2)^Degree_x_Phi2*
> (y - Center_y_Phi2)^Degree_y_Phi2*
> (z - Center_z_Phi2)^Degree_z_Phi2*
> exp( - Exponents_Phi2[3] * (
> (x - Center_x_Phi2)^2 +
> (y - Center_y_Phi2)^2 +
> (z - Center_z_Phi2)^2
>));
> end:
> basisFunction_Phi2[3](x,y,z);
> Derivate1_x := 0;
> Derivate1_y := 0;
> Derivate1_z := 0;
> Derivate2_x := 0;
> Derivate2_y := 0;
> Derivate2_z := 0;
> Overlap := 0;
> Int(Int(Int(
> Diff(
> basisFunction_Phi1[1](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> Diff(
> basisFunction_Phi2[1](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> overlap_temp := evalf[16](int(int(int(
> diff(
> basisFunction_Phi1[1](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> diff(
> basisFunction_Phi2[1](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> Overlap := Overlap + overlap_temp;
> Int(Int(Int(
> Diff(
> basisFunction_Phi1[1](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> Diff(
> basisFunction_Phi2[2](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> overlap_temp := evalf[16](int(int(int(
> diff(
> basisFunction_Phi1[1](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> diff(
> basisFunction_Phi2[2](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> Overlap := Overlap + overlap_temp;
> Int(Int(Int(
> Diff(
> basisFunction_Phi1[1](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> Diff(
> basisFunction_Phi2[3](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> overlap_temp := evalf[16](int(int(int(
> diff(
> basisFunction_Phi1[1](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> diff(
> basisFunction_Phi2[3](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> Overlap := Overlap + overlap_temp;
> Int(Int(Int(
> Diff(
> basisFunction_Phi1[2](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> Diff(
> basisFunction_Phi2[1](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> overlap_temp := evalf[16](int(int(int(
> diff(
> basisFunction_Phi1[2](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> diff(
> basisFunction_Phi2[1](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> Overlap := Overlap + overlap_temp;
> Int(Int(Int(
> Diff(
> basisFunction_Phi1[2](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> Diff(
> basisFunction_Phi2[2](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> overlap_temp := evalf[16](int(int(int(
> diff(
> basisFunction_Phi1[2](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> diff(
> basisFunction_Phi2[2](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> Overlap := Overlap + overlap_temp;
> Int(Int(Int(
> Diff(
> basisFunction_Phi1[2](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> Diff(
> basisFunction_Phi2[3](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> overlap_temp := evalf[16](int(int(int(
> diff(
> basisFunction_Phi1[2](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> diff(
> basisFunction_Phi2[3](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> Overlap := Overlap + overlap_temp;
> Int(Int(Int(
> Diff(
> basisFunction_Phi1[3](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> Diff(
> basisFunction_Phi2[1](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> overlap_temp := evalf[16](int(int(int(
> diff(
> basisFunction_Phi1[3](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> diff(
> basisFunction_Phi2[1](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> Overlap := Overlap + overlap_temp;
> Int(Int(Int(
> Diff(
> basisFunction_Phi1[3](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> Diff(
> basisFunction_Phi2[2](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> overlap_temp := evalf[16](int(int(int(
> diff(
> basisFunction_Phi1[3](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> diff(
> basisFunction_Phi2[2](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> Overlap := Overlap + overlap_temp;
> Int(Int(Int(
> Diff(
> basisFunction_Phi1[3](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> Diff(
> basisFunction_Phi2[3](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> overlap_temp := evalf[16](int(int(int(
> diff(
> basisFunction_Phi1[3](x,y,z) , 
> x$Derivate1_x , y$Derivate1_y , z$Derivate1_z) *
> diff(
> basisFunction_Phi2[3](x,y,z) , 
> x$Derivate2_x , y$Derivate2_y , z$Derivate2_z) *
> ,x=-infinity .. infinity)
> ,y=-infinity .. infinity)
>, z=-infinity .. infinity);
> Overlap := Overlap + overlap_temp;
